หลักการและการทำงานของโค้ดนี้มีดังนี้:

หลักการทั่วไป
การใช้ set:

ในภาษา C++ set เป็นโครงสร้างข้อมูลที่เก็บค่าที่ไม่ซ้ำกันและเรียงลำดับอัตโนมัติ ซึ่งช่วยให้การค้นหาค่าที่ต้องการทำได้อย่างรวดเร็ว 
EXPERT PROGRAMMING TUTOR
การใช้ lower_bound:

ฟังก์ชัน lower_bound ใน set จะคืนค่า iterator ที่ชี้ไปยังตำแหน่งของค่าที่ ไม่ต่ำกว่า ค่าที่กำหนด หากไม่มีค่าที่ไม่ต่ำกว่านั้น จะคืน iterator ที่ชี้ไปยังตำแหน่งสุดท้ายของ set
การหาค่าที่ใกล้เคียงที่สุด:

สำหรับแต่ละคำถาม 
𝑌
𝑗
Y 
j
​
 :
ใช้ lower_bound เพื่อหาค่าที่ไม่ต่ำกว่า 
𝑌
𝑗
Y 
j
​
 
ตรวจสอบค่าที่อยู่ก่อนหน้าและหลังตำแหน่งที่ได้จาก lower_bound (ถ้ามี) เพื่อหาค่าที่ใกล้เคียงที่สุด
หากมีค่าที่มีระยะทางเท่ากันจาก 
𝑌
𝑗
Y 
j
​
  ให้เลือกค่าที่น้อยกว่า
การทำงานของโค้ด
การอ่านข้อมูล:

อ่านจำนวน 
𝑁
N และ 
𝑀
M
สร้าง set และเพิ่มค่าจากลิสต์ 
𝑋
X ทั้งหมดลงใน set
การประมวลผลคำถาม:

สำหรับแต่ละคำถาม 
𝑌
𝑗
Y 
j
​
 :
ใช้ lower_bound เพื่อหาค่าที่ไม่ต่ำกว่า 
𝑌
𝑗
Y 
j
​
 
ตรวจสอบค่าที่อยู่ก่อนหน้าและหลังตำแหน่งที่ได้จาก lower_bound (ถ้ามี) เพื่อหาค่าที่ใกล้เคียงที่สุด
หากมีค่าที่มีระยะทางเท่ากันจาก 
𝑌
𝑗
Y 
j
​
  ให้เลือกค่าที่น้อยกว่า
การแสดงผลลัพธ์:

เก็บผลลัพธ์ของแต่ละคำถามในลิสต์ results และพิมพ์ออกมาทีละค่า
ตัวอย่างการทำงาน
อินพุต:
คัดลอก
แก้ไข
5 4
10
20
35
12
25
100
11
17
25
35
การประมวลผล:
เพิ่ม {10, 12, 20, 25, 35} ลงใน set
สำหรับแต่ละคำถาม:
คำถาม 
𝑌
=
100
Y=100: ค่าที่ใกล้ที่สุดคือ 35
คำถาม 
𝑌
=
11
Y=11: ค่าที่ใกล้ที่สุดคือ 10
คำถาม 
𝑌
=
17
Y=17: ค่าที่ใกล้ที่สุดคือ 20
คำถาม 
𝑌
=
25
Y=25: ค่าที่ใกล้ที่สุดคือ 25
เอาต์พุต:
คัดลอก
แก้ไข
35
10
20
25
โค้ดนี้ใช้ set และฟังก์ชัน lower_bound เพื่อหาค่าที่ใกล้เคียงที่สุดอย่างมีประสิทธิภาพ โดยมีความซับซ้อนเวลา 
𝑂
(
𝑁
log
⁡
𝑁
+
𝑀
log
⁡
𝑁
)
O(NlogN+MlogN) ซึ่งเหมาะสมสำหรับ 
𝑁
,
𝑀
≤
100
,
000
N,M≤100,000